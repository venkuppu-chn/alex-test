name: CORTX reviewdog
on:  
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  alex:
    name: Scan and report the inclusive words
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v2
      - uses: reviewdog/action-alex@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          filter_mode: added
          reporter: github-pr-review
          fail_on_error: false
      - name: "Print Env"
        run: |
          echo $github_token 
          echo $INPUT_GITHUB_TOKEN 
          echo $REVIEWDOG_GITHUB_API_TOKEN 
          echo $INPUT_FILTER_MODE 
          echo $INPUT_REPORTER 
          echo $INPUT_FAIL_ON_ERROR 
          echo $INPUT_WORKDIR 
          echo $INPUT_LEVEL 
          echo $INPUT_REVIEWDOG_FLAGS 
          echo $INPUT_ALEX_FLAGS 
          echo $HOME 
          echo $GITHUB_JOB 
          echo $GITHUB_REF 
          echo $GITHUB_SHA 
          echo $GITHUB_REPOSITORY 
          echo $GITHUB_REPOSITORY_OWNER 
          echo $GITHUB_RUN_ID 
          echo $GITHUB_RUN_NUMBER 
          echo $GITHUB_RETENTION_DAYS 
          echo $GITHUB_ACTOR 
          echo $GITHUB_WORKFLOW 
          echo $GITHUB_HEAD_REF 
          echo $GITHUB_BASE_REF 
          echo $GITHUB_EVENT_NAME 
          echo $GITHUB_SERVER_URL 
          echo $GITHUB_API_URL 
          echo $GITHUB_GRAPHQL_URL 
          echo $GITHUB_WORKSPACE 
          echo $GITHUB_ACTION 
          echo $GITHUB_EVENT_PATH 
          echo $GITHUB_ACTION_REPOSITORY 
          echo $GITHUB_ACTION_REF 
          echo $GITHUB_PATH 
          echo $GITHUB_ENV 
          echo $RUNNER_OS 
          echo $RUNNER_TOOL_CACHE 
          echo $RUNNER_TEMP 
          echo $RUNNER_WORKSPACE 
          echo $ACTIONS_RUNTIME_URL 
          echo $ACTIONS_RUNTIME_TOKEN 
          echo $ACTIONS_CACHE_URL
