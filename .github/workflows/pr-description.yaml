name: PR Template Update

on:
  pull_request:
    # types: [ labeled, opened, synchronize ]
    types: [ opened, synchronize ]
    branches:
      - main
  workflow_dispatch:

jobs:
  pr-template:
    # if: ${{ github.event.label.name == 'small' || github.event.action == 'synchronize' }}
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v2       
       - name: Print Template
         run: echo "${{ steps.template.outputs.content }}"
       - id: files
         uses: jitterbit/get-changed-files@v1
       - name: Set the flag for template
         run: |
            echo ${{ steps.files.outputs.all }} > file_changed.txt
            
       - name: Selecting the template
         id: template_name
         run: |
            import os
            import requests
            temp_name = ''
            repo = os.environ['REPO']
            pr_number = os.environ['PR_NUMBER']
            user = os.environ['USER']
            token = os.environ['TOKEN']
            url = "https://api.github.com/repos/%s/pulls/%s" %(repo, pr_number)
            file_url = '%s/files' %url
            files_list = requests.get(url, auth=(user, token))
            print (files_list.json())
            
            with open('file_changed.txt', 'r') as f_obj:
                file_list = f_obj.read() 
            if '.txt' in file_list or '.md' in file_list:
                temp_name = './.github/pr-template/document_template.md'
            else:
                temp_name = './.github/pr-template/feature_template.md'
            with open(temp_name, 'r') as f_obj:
                body = f_obj.read()
            payload = {
              "body": body
            }
            r = requests.patch(url, auth=(user, token), json=payload)
            print (r.json())
         shell: python
         env: 
            REPO: "${{ github.repository }}"
            PR_NUMBER: "${{ github.event.number }}"
            USER: "${{ secrets.USERNAME }}"
            TOKEN: "${{ secrets.PERSONAL_TOKEN }}"
            

